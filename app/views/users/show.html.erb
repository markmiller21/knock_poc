<div class="container">
  <div class="row" id="setup_call_request_alert">
    <div class="col-md-8">
      <div class="alert alert-success">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong>Success!</strong> Schedule request and email sent please wait for <%=@knockee.display_name%> to accept.
      </div>
    </div>
  </div>
  <div class="row" id="setup_meeting_request_alert">
    <div class="col-md-8">
      <div class="alert alert-success">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong>Success!</strong> Schedule meeting and email sent please wait for <%=@knockee.display_name%> to accept.
      </div>
    </div>
  </div>

  <br/><br/>
  <small><%=link_to "← BACK TO VIEW GEORGETOWN APPLICATION ESSAYS", users_path%></small>
  <br/><br/><br/>
  <div class="row">
    <div class="col-md-5">
      <img src="<%=get_user_avatar @knockee.avatar_path.url%>" class="img-thumbnail img-rounded img-profile" />
    </div>
    <div class="col-md-7 offset-profile">
      <h2><%=@knockee.display_name%></h2>
      <p><span class="knock-text-color">Essay:</span> $5.00</p>

      <% if @knockee.phone_call_price %>
          <p><span class="knock-text-color"><%=@knockee.first_name%>'s call price per 15 minutes:</span> $<%=@knockee.phone_call_price%></p>
      <%else%>
          <p><span class="knock-text-color">Calls: </span>This student does not accept calls.</p>
      <%end%>

      <% if @knockee.philanthropy_percent.present? && @knockee.philanthropy_percent != 0%>
          <p><span class="knock-text-color">Philanthropic Option:</span> A portion of this student's earnings go to the Georgetown Scholarship Fund</p>
      <%end%>
      <p><span class="knock-text-color">School:</span> <%=@knockee.college%></p>

      <p><span class="knock-text-color">High School Activities: </span><span><%=@knockee.personal_description.present? ? @knockee.personal_description : "N/A"%></span></p>

      <br/><br/>

      <!-- only if user signed in then we allow them to schedule call or meetings with college students. The modal is also depends on whether user signed in.-->
      <% if user_signed_in? %>

          <p><span class="knock-text-color"> Knock to schedule a: </span></p>
          <!-- For now, I assume that if the ***_price is present, then the knockee accpet the corresponding type of meeting. which means highschoolers can schedule it with them.  -->
          <% if @knockee.phone_call_price.present? %>
              <a class="btn btn-info no-rounded-corner global-knock-button profile-button-size" id="call-btn">Phone Call</a><!-- I will just puts the text for now, Mark will do the style or button title later, the same as in-person meeting and video call. -->
          <% end %>
          <% if @knockee.meeting_price.present? %>
              <a class="btn btn-info no-rounded-corner global-knock-button profile-button-size" id="meeting-btn">In-Person Meeting</a>
          <% end %>
          <% if @knockee.video_price.present? %>
              <a class="btn btn-info no-rounded-corner global-knock-button profile-button-size" id="video-call-btn">Video Call</a>
          <% end %>
          <%=link_to "Add Essay to Cart", "", class: "btn btn-info no-rounded-corner global-knock-button add-cart-button" %>

          <div id="clientStart" style="display:none;">
            Sinch client started!
          </div>

          <!-- Modal -->
          <div class="modal fade" id="meeting-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
              <div class="modal-content" id="setup_meeting_request_modal_content">
                <%=render partial: "users/meeting_form"%>
              </div>
            </div>
          </div>
          <!-- End Modal -->

      <% else %>
          <p class="cant-schedule-error-msg">You haven't login, please login or signup <%= link_to "here", new_user_registration_path %> to schedule a call or meeting with GU college students!</p>
      <% end %>

      <br/>
    </div>
  </div>
</div>

<script>
    $('document').ready(function() {
        $("#signOut").click(function() {
            if (sinchClient) {
                sinchClient.terminate();
            }
        });

        var incomingCallListener = {
            onIncomingCall: function(incomingCall) {
                $("div#status").append("<div>Incoming Call</div>");
                call = incomingCall;
                call.addEventListener(callListeners);
            }
        }

        var callListeners = {
            //call is "ringing"
            onCallProgressing: function(call) {
                $("div#status").append("<div>Ringing</div>");
            },
            //they picked up the call!
            onCallEstablished: function(call) {
                $("div#status").append("<div>Call established</div>");
                $("video#outgoing").attr("src", call.outgoingStreamURL);
                $("video#incoming").attr("src", call.incomingStreamURL);
            },
            //ended by either party
            onCallEnded: function(call) {
                $("div#status").append("<div>Call ended</div>");
                $("video#outgoing").attr("src", "");
                $("video#incoming").attr("src", "");
                call = null;
            }
        }

        function afterStartSinchClient() {
            // hide auth form
            $("form#authForm").css("display", "none");
            // show logged-in view
            $("div#sinch").css("display", "inline");
            // start listening for incoming calls
            sinchClient.startActiveConnection();
            // define call client (to handle incoming/outgoing calls)
            callClient = sinchClient.getCallClient();
            //initialize media streams, asks for microphone & video permission
            callClient.initStream();
            //what to do when there is an incoming call
            callClient.addEventListener(incomingCallListener);
        }


        sinchClient = new SinchClient({
            applicationKey: "<%=Constants::SINCH_API_KEY%>",
            capabilities: {messaging: true, calling: true, video: true},
            startActiveConnection: true,
            onLogMessage: function(message) {
                console.log(message.message);
            },
        });
        sinchClient.start({"userTicket":"<%=@ticket%>"})
                .then(function() {
                    $("#clientStart").css("display", "inline");
                    afterStartSinchClient();
                });
    });
</script>